apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: devkafka
  namespace: kafka
spec:
  cruiseControl: {}
  kafka:
    version: 3.2.3
    replicas: 3
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9094
        type: ingress
        tls: true
        authentication:
          type: scram-sha-512
        configuration:
          bootstrap:
            host: kafka-bootstrap.mydomain.com
            annotations:
              external-dns.alpha.kubernetes.io/hostname: kafka-bootstrap.mydomain.com.
              external-dns.alpha.kubernetes.io/ttl: "600"
          brokers:
            - broker: 0
              host: kafka-b0.mydomain.com
              annotations:
                external-dns.alpha.kubernetes.io/hostname: kafka-b0.mydomain.com.
                external-dns.alpha.kubernetes.io/ttl: "600"
            - broker: 1
              host: kafka-b1.mydomain.com
              annotations:
                external-dns.alpha.kubernetes.io/hostname: kafka-b1.mydomain.com.
                external-dns.alpha.kubernetes.io/ttl: "600"
            - broker: 2
              host: kafka-b2.mydomain.com
              annotations:
                external-dns.alpha.kubernetes.io/hostname: kafka-b2.mydomain.com.
                external-dns.alpha.kubernetes.io/ttl: "600"
          class: ingress-kafka
    config:
      offsets.topic.replication.factor: 3
      transaction.state.log.replication.factor: 3
      transaction.state.log.min.isr: 2
      default.replication.factor: 3
      min.insync.replicas: 2
      inter.broker.protocol.version: "3.2"
    resources:
      requests:
        memory: 7Gi
        cpu: "1"
      limits:
        memory: 12Gi
        cpu: "2"
    jvmOptions:
      "-Xmx": "6g"
      "-Xms": "5g"
    storage:
      type: jbod
      volumes:
        - id: 0
          type: persistent-claim
          size: 100Gi
          class: gp3
          deleteClaim: false
    template:
      pod:
        tolerations:
          - key: "service"
            operator: "Equal"
            value: "kafka"
            effect: "NoSchedule"
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: service
                      operator: In
                      values:
                        - kafka
    rack:
      topologyKey: topology.kubernetes.io/zone
  kafkaExporter:
    template:
      pod:
        metadata:
          annotations:
            prometheus.io/path: /metrics
            prometheus.io/port: "9404"
            prometheus.io/scrape: "true"
  zookeeper:
    template:
      pod:
        metadata:
          annotations:
            prometheus.io/path: /metrics
            prometheus.io/port: "9404"
            prometheus.io/scrape: "true"
    replicas: 3
    storage:
      type: persistent-claim
      size: 10Gi
      class: gp3
      deleteClaim: false
  entityOperator:
    topicOperator: {}
    userOperator: {}